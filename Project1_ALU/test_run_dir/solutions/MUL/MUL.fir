;buildInfoPackage: chisel3, version: 3.1.0, scalaVersion: 2.11.12, sbtVersion: 1.1.1, builtAtString: 2018-04-17 19:22:56.455, builtAtMillis: 1523992976455
circuit MUL : 
  module Booth : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<3>, flip b : UInt<16>, out : UInt<18>, cout : UInt<1>}
    
    node _T_14 = eq(io.a, UInt<1>("h00")) @[Booth.scala 15:15]
    node _T_16 = eq(io.a, UInt<3>("h07")) @[Booth.scala 15:31]
    node _T_17 = or(_T_14, _T_16) @[Booth.scala 15:23]
    when _T_17 : @[Booth.scala 15:40]
      node _T_20 = cat(UInt<1>("h01"), UInt<17>("h00")) @[Cat.scala 30:58]
      io.out <= _T_20 @[Booth.scala 16:16]
      io.cout <= UInt<1>("h00") @[Booth.scala 17:17]
      skip @[Booth.scala 15:40]
    else : @[Booth.scala 18:47]
      node _T_23 = eq(io.a, UInt<1>("h01")) @[Booth.scala 18:22]
      node _T_25 = eq(io.a, UInt<2>("h02")) @[Booth.scala 18:38]
      node _T_26 = or(_T_23, _T_25) @[Booth.scala 18:30]
      when _T_26 : @[Booth.scala 18:47]
        node _T_29 = cat(UInt<1>("h01"), UInt<1>("h00")) @[Cat.scala 30:58]
        node _T_30 = cat(_T_29, io.b) @[Cat.scala 30:58]
        io.out <= _T_30 @[Booth.scala 19:16]
        io.cout <= UInt<1>("h00") @[Booth.scala 20:17]
        skip @[Booth.scala 18:47]
      else : @[Booth.scala 21:47]
        node _T_33 = eq(io.a, UInt<3>("h05")) @[Booth.scala 21:22]
        node _T_35 = eq(io.a, UInt<3>("h06")) @[Booth.scala 21:38]
        node _T_36 = or(_T_33, _T_35) @[Booth.scala 21:30]
        when _T_36 : @[Booth.scala 21:47]
          node _T_39 = not(io.b) @[Booth.scala 22:43]
          node _T_40 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
          node _T_41 = cat(_T_40, _T_39) @[Cat.scala 30:58]
          io.out <= _T_41 @[Booth.scala 22:16]
          io.cout <= UInt<1>("h01") @[Booth.scala 23:17]
          skip @[Booth.scala 21:47]
        else : @[Booth.scala 24:31]
          node _T_44 = eq(io.a, UInt<2>("h03")) @[Booth.scala 24:22]
          when _T_44 : @[Booth.scala 24:31]
            node _T_47 = cat(UInt<1>("h01"), io.b) @[Cat.scala 30:58]
            node _T_48 = cat(_T_47, UInt<1>("h00")) @[Cat.scala 30:58]
            io.out <= _T_48 @[Booth.scala 25:16]
            io.cout <= UInt<1>("h00") @[Booth.scala 26:17]
            skip @[Booth.scala 24:31]
          else : @[Booth.scala 27:18]
            node _T_51 = not(io.b) @[Booth.scala 28:33]
            node _T_53 = cat(UInt<1>("h00"), _T_51) @[Cat.scala 30:58]
            node _T_54 = cat(_T_53, UInt<1>("h01")) @[Cat.scala 30:58]
            io.out <= _T_54 @[Booth.scala 28:16]
            io.cout <= UInt<1>("h01") @[Booth.scala 29:17]
            skip @[Booth.scala 27:18]
    
  module Booth_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<3>, flip b : UInt<16>, out : UInt<18>, cout : UInt<1>}
    
    node _T_14 = eq(io.a, UInt<1>("h00")) @[Booth.scala 15:15]
    node _T_16 = eq(io.a, UInt<3>("h07")) @[Booth.scala 15:31]
    node _T_17 = or(_T_14, _T_16) @[Booth.scala 15:23]
    when _T_17 : @[Booth.scala 15:40]
      node _T_20 = cat(UInt<1>("h01"), UInt<17>("h00")) @[Cat.scala 30:58]
      io.out <= _T_20 @[Booth.scala 16:16]
      io.cout <= UInt<1>("h00") @[Booth.scala 17:17]
      skip @[Booth.scala 15:40]
    else : @[Booth.scala 18:47]
      node _T_23 = eq(io.a, UInt<1>("h01")) @[Booth.scala 18:22]
      node _T_25 = eq(io.a, UInt<2>("h02")) @[Booth.scala 18:38]
      node _T_26 = or(_T_23, _T_25) @[Booth.scala 18:30]
      when _T_26 : @[Booth.scala 18:47]
        node _T_29 = cat(UInt<1>("h01"), UInt<1>("h00")) @[Cat.scala 30:58]
        node _T_30 = cat(_T_29, io.b) @[Cat.scala 30:58]
        io.out <= _T_30 @[Booth.scala 19:16]
        io.cout <= UInt<1>("h00") @[Booth.scala 20:17]
        skip @[Booth.scala 18:47]
      else : @[Booth.scala 21:47]
        node _T_33 = eq(io.a, UInt<3>("h05")) @[Booth.scala 21:22]
        node _T_35 = eq(io.a, UInt<3>("h06")) @[Booth.scala 21:38]
        node _T_36 = or(_T_33, _T_35) @[Booth.scala 21:30]
        when _T_36 : @[Booth.scala 21:47]
          node _T_39 = not(io.b) @[Booth.scala 22:43]
          node _T_40 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
          node _T_41 = cat(_T_40, _T_39) @[Cat.scala 30:58]
          io.out <= _T_41 @[Booth.scala 22:16]
          io.cout <= UInt<1>("h01") @[Booth.scala 23:17]
          skip @[Booth.scala 21:47]
        else : @[Booth.scala 24:31]
          node _T_44 = eq(io.a, UInt<2>("h03")) @[Booth.scala 24:22]
          when _T_44 : @[Booth.scala 24:31]
            node _T_47 = cat(UInt<1>("h01"), io.b) @[Cat.scala 30:58]
            node _T_48 = cat(_T_47, UInt<1>("h00")) @[Cat.scala 30:58]
            io.out <= _T_48 @[Booth.scala 25:16]
            io.cout <= UInt<1>("h00") @[Booth.scala 26:17]
            skip @[Booth.scala 24:31]
          else : @[Booth.scala 27:18]
            node _T_51 = not(io.b) @[Booth.scala 28:33]
            node _T_53 = cat(UInt<1>("h00"), _T_51) @[Cat.scala 30:58]
            node _T_54 = cat(_T_53, UInt<1>("h01")) @[Cat.scala 30:58]
            io.out <= _T_54 @[Booth.scala 28:16]
            io.cout <= UInt<1>("h01") @[Booth.scala 29:17]
            skip @[Booth.scala 27:18]
    
  module Booth_2 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<3>, flip b : UInt<16>, out : UInt<18>, cout : UInt<1>}
    
    node _T_14 = eq(io.a, UInt<1>("h00")) @[Booth.scala 15:15]
    node _T_16 = eq(io.a, UInt<3>("h07")) @[Booth.scala 15:31]
    node _T_17 = or(_T_14, _T_16) @[Booth.scala 15:23]
    when _T_17 : @[Booth.scala 15:40]
      node _T_20 = cat(UInt<1>("h01"), UInt<17>("h00")) @[Cat.scala 30:58]
      io.out <= _T_20 @[Booth.scala 16:16]
      io.cout <= UInt<1>("h00") @[Booth.scala 17:17]
      skip @[Booth.scala 15:40]
    else : @[Booth.scala 18:47]
      node _T_23 = eq(io.a, UInt<1>("h01")) @[Booth.scala 18:22]
      node _T_25 = eq(io.a, UInt<2>("h02")) @[Booth.scala 18:38]
      node _T_26 = or(_T_23, _T_25) @[Booth.scala 18:30]
      when _T_26 : @[Booth.scala 18:47]
        node _T_29 = cat(UInt<1>("h01"), UInt<1>("h00")) @[Cat.scala 30:58]
        node _T_30 = cat(_T_29, io.b) @[Cat.scala 30:58]
        io.out <= _T_30 @[Booth.scala 19:16]
        io.cout <= UInt<1>("h00") @[Booth.scala 20:17]
        skip @[Booth.scala 18:47]
      else : @[Booth.scala 21:47]
        node _T_33 = eq(io.a, UInt<3>("h05")) @[Booth.scala 21:22]
        node _T_35 = eq(io.a, UInt<3>("h06")) @[Booth.scala 21:38]
        node _T_36 = or(_T_33, _T_35) @[Booth.scala 21:30]
        when _T_36 : @[Booth.scala 21:47]
          node _T_39 = not(io.b) @[Booth.scala 22:43]
          node _T_40 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
          node _T_41 = cat(_T_40, _T_39) @[Cat.scala 30:58]
          io.out <= _T_41 @[Booth.scala 22:16]
          io.cout <= UInt<1>("h01") @[Booth.scala 23:17]
          skip @[Booth.scala 21:47]
        else : @[Booth.scala 24:31]
          node _T_44 = eq(io.a, UInt<2>("h03")) @[Booth.scala 24:22]
          when _T_44 : @[Booth.scala 24:31]
            node _T_47 = cat(UInt<1>("h01"), io.b) @[Cat.scala 30:58]
            node _T_48 = cat(_T_47, UInt<1>("h00")) @[Cat.scala 30:58]
            io.out <= _T_48 @[Booth.scala 25:16]
            io.cout <= UInt<1>("h00") @[Booth.scala 26:17]
            skip @[Booth.scala 24:31]
          else : @[Booth.scala 27:18]
            node _T_51 = not(io.b) @[Booth.scala 28:33]
            node _T_53 = cat(UInt<1>("h00"), _T_51) @[Cat.scala 30:58]
            node _T_54 = cat(_T_53, UInt<1>("h01")) @[Cat.scala 30:58]
            io.out <= _T_54 @[Booth.scala 28:16]
            io.cout <= UInt<1>("h01") @[Booth.scala 29:17]
            skip @[Booth.scala 27:18]
    
  module Booth_3 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<3>, flip b : UInt<16>, out : UInt<18>, cout : UInt<1>}
    
    node _T_14 = eq(io.a, UInt<1>("h00")) @[Booth.scala 15:15]
    node _T_16 = eq(io.a, UInt<3>("h07")) @[Booth.scala 15:31]
    node _T_17 = or(_T_14, _T_16) @[Booth.scala 15:23]
    when _T_17 : @[Booth.scala 15:40]
      node _T_20 = cat(UInt<1>("h01"), UInt<17>("h00")) @[Cat.scala 30:58]
      io.out <= _T_20 @[Booth.scala 16:16]
      io.cout <= UInt<1>("h00") @[Booth.scala 17:17]
      skip @[Booth.scala 15:40]
    else : @[Booth.scala 18:47]
      node _T_23 = eq(io.a, UInt<1>("h01")) @[Booth.scala 18:22]
      node _T_25 = eq(io.a, UInt<2>("h02")) @[Booth.scala 18:38]
      node _T_26 = or(_T_23, _T_25) @[Booth.scala 18:30]
      when _T_26 : @[Booth.scala 18:47]
        node _T_29 = cat(UInt<1>("h01"), UInt<1>("h00")) @[Cat.scala 30:58]
        node _T_30 = cat(_T_29, io.b) @[Cat.scala 30:58]
        io.out <= _T_30 @[Booth.scala 19:16]
        io.cout <= UInt<1>("h00") @[Booth.scala 20:17]
        skip @[Booth.scala 18:47]
      else : @[Booth.scala 21:47]
        node _T_33 = eq(io.a, UInt<3>("h05")) @[Booth.scala 21:22]
        node _T_35 = eq(io.a, UInt<3>("h06")) @[Booth.scala 21:38]
        node _T_36 = or(_T_33, _T_35) @[Booth.scala 21:30]
        when _T_36 : @[Booth.scala 21:47]
          node _T_39 = not(io.b) @[Booth.scala 22:43]
          node _T_40 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
          node _T_41 = cat(_T_40, _T_39) @[Cat.scala 30:58]
          io.out <= _T_41 @[Booth.scala 22:16]
          io.cout <= UInt<1>("h01") @[Booth.scala 23:17]
          skip @[Booth.scala 21:47]
        else : @[Booth.scala 24:31]
          node _T_44 = eq(io.a, UInt<2>("h03")) @[Booth.scala 24:22]
          when _T_44 : @[Booth.scala 24:31]
            node _T_47 = cat(UInt<1>("h01"), io.b) @[Cat.scala 30:58]
            node _T_48 = cat(_T_47, UInt<1>("h00")) @[Cat.scala 30:58]
            io.out <= _T_48 @[Booth.scala 25:16]
            io.cout <= UInt<1>("h00") @[Booth.scala 26:17]
            skip @[Booth.scala 24:31]
          else : @[Booth.scala 27:18]
            node _T_51 = not(io.b) @[Booth.scala 28:33]
            node _T_53 = cat(UInt<1>("h00"), _T_51) @[Cat.scala 30:58]
            node _T_54 = cat(_T_53, UInt<1>("h01")) @[Cat.scala 30:58]
            io.out <= _T_54 @[Booth.scala 28:16]
            io.cout <= UInt<1>("h01") @[Booth.scala 29:17]
            skip @[Booth.scala 27:18]
    
  module Booth_4 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<3>, flip b : UInt<16>, out : UInt<18>, cout : UInt<1>}
    
    node _T_14 = eq(io.a, UInt<1>("h00")) @[Booth.scala 15:15]
    node _T_16 = eq(io.a, UInt<3>("h07")) @[Booth.scala 15:31]
    node _T_17 = or(_T_14, _T_16) @[Booth.scala 15:23]
    when _T_17 : @[Booth.scala 15:40]
      node _T_20 = cat(UInt<1>("h01"), UInt<17>("h00")) @[Cat.scala 30:58]
      io.out <= _T_20 @[Booth.scala 16:16]
      io.cout <= UInt<1>("h00") @[Booth.scala 17:17]
      skip @[Booth.scala 15:40]
    else : @[Booth.scala 18:47]
      node _T_23 = eq(io.a, UInt<1>("h01")) @[Booth.scala 18:22]
      node _T_25 = eq(io.a, UInt<2>("h02")) @[Booth.scala 18:38]
      node _T_26 = or(_T_23, _T_25) @[Booth.scala 18:30]
      when _T_26 : @[Booth.scala 18:47]
        node _T_29 = cat(UInt<1>("h01"), UInt<1>("h00")) @[Cat.scala 30:58]
        node _T_30 = cat(_T_29, io.b) @[Cat.scala 30:58]
        io.out <= _T_30 @[Booth.scala 19:16]
        io.cout <= UInt<1>("h00") @[Booth.scala 20:17]
        skip @[Booth.scala 18:47]
      else : @[Booth.scala 21:47]
        node _T_33 = eq(io.a, UInt<3>("h05")) @[Booth.scala 21:22]
        node _T_35 = eq(io.a, UInt<3>("h06")) @[Booth.scala 21:38]
        node _T_36 = or(_T_33, _T_35) @[Booth.scala 21:30]
        when _T_36 : @[Booth.scala 21:47]
          node _T_39 = not(io.b) @[Booth.scala 22:43]
          node _T_40 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
          node _T_41 = cat(_T_40, _T_39) @[Cat.scala 30:58]
          io.out <= _T_41 @[Booth.scala 22:16]
          io.cout <= UInt<1>("h01") @[Booth.scala 23:17]
          skip @[Booth.scala 21:47]
        else : @[Booth.scala 24:31]
          node _T_44 = eq(io.a, UInt<2>("h03")) @[Booth.scala 24:22]
          when _T_44 : @[Booth.scala 24:31]
            node _T_47 = cat(UInt<1>("h01"), io.b) @[Cat.scala 30:58]
            node _T_48 = cat(_T_47, UInt<1>("h00")) @[Cat.scala 30:58]
            io.out <= _T_48 @[Booth.scala 25:16]
            io.cout <= UInt<1>("h00") @[Booth.scala 26:17]
            skip @[Booth.scala 24:31]
          else : @[Booth.scala 27:18]
            node _T_51 = not(io.b) @[Booth.scala 28:33]
            node _T_53 = cat(UInt<1>("h00"), _T_51) @[Cat.scala 30:58]
            node _T_54 = cat(_T_53, UInt<1>("h01")) @[Cat.scala 30:58]
            io.out <= _T_54 @[Booth.scala 28:16]
            io.cout <= UInt<1>("h01") @[Booth.scala 29:17]
            skip @[Booth.scala 27:18]
    
  module Booth_5 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<3>, flip b : UInt<16>, out : UInt<18>, cout : UInt<1>}
    
    node _T_14 = eq(io.a, UInt<1>("h00")) @[Booth.scala 15:15]
    node _T_16 = eq(io.a, UInt<3>("h07")) @[Booth.scala 15:31]
    node _T_17 = or(_T_14, _T_16) @[Booth.scala 15:23]
    when _T_17 : @[Booth.scala 15:40]
      node _T_20 = cat(UInt<1>("h01"), UInt<17>("h00")) @[Cat.scala 30:58]
      io.out <= _T_20 @[Booth.scala 16:16]
      io.cout <= UInt<1>("h00") @[Booth.scala 17:17]
      skip @[Booth.scala 15:40]
    else : @[Booth.scala 18:47]
      node _T_23 = eq(io.a, UInt<1>("h01")) @[Booth.scala 18:22]
      node _T_25 = eq(io.a, UInt<2>("h02")) @[Booth.scala 18:38]
      node _T_26 = or(_T_23, _T_25) @[Booth.scala 18:30]
      when _T_26 : @[Booth.scala 18:47]
        node _T_29 = cat(UInt<1>("h01"), UInt<1>("h00")) @[Cat.scala 30:58]
        node _T_30 = cat(_T_29, io.b) @[Cat.scala 30:58]
        io.out <= _T_30 @[Booth.scala 19:16]
        io.cout <= UInt<1>("h00") @[Booth.scala 20:17]
        skip @[Booth.scala 18:47]
      else : @[Booth.scala 21:47]
        node _T_33 = eq(io.a, UInt<3>("h05")) @[Booth.scala 21:22]
        node _T_35 = eq(io.a, UInt<3>("h06")) @[Booth.scala 21:38]
        node _T_36 = or(_T_33, _T_35) @[Booth.scala 21:30]
        when _T_36 : @[Booth.scala 21:47]
          node _T_39 = not(io.b) @[Booth.scala 22:43]
          node _T_40 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
          node _T_41 = cat(_T_40, _T_39) @[Cat.scala 30:58]
          io.out <= _T_41 @[Booth.scala 22:16]
          io.cout <= UInt<1>("h01") @[Booth.scala 23:17]
          skip @[Booth.scala 21:47]
        else : @[Booth.scala 24:31]
          node _T_44 = eq(io.a, UInt<2>("h03")) @[Booth.scala 24:22]
          when _T_44 : @[Booth.scala 24:31]
            node _T_47 = cat(UInt<1>("h01"), io.b) @[Cat.scala 30:58]
            node _T_48 = cat(_T_47, UInt<1>("h00")) @[Cat.scala 30:58]
            io.out <= _T_48 @[Booth.scala 25:16]
            io.cout <= UInt<1>("h00") @[Booth.scala 26:17]
            skip @[Booth.scala 24:31]
          else : @[Booth.scala 27:18]
            node _T_51 = not(io.b) @[Booth.scala 28:33]
            node _T_53 = cat(UInt<1>("h00"), _T_51) @[Cat.scala 30:58]
            node _T_54 = cat(_T_53, UInt<1>("h01")) @[Cat.scala 30:58]
            io.out <= _T_54 @[Booth.scala 28:16]
            io.cout <= UInt<1>("h01") @[Booth.scala 29:17]
            skip @[Booth.scala 27:18]
    
  module Booth_6 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<3>, flip b : UInt<16>, out : UInt<18>, cout : UInt<1>}
    
    node _T_14 = eq(io.a, UInt<1>("h00")) @[Booth.scala 15:15]
    node _T_16 = eq(io.a, UInt<3>("h07")) @[Booth.scala 15:31]
    node _T_17 = or(_T_14, _T_16) @[Booth.scala 15:23]
    when _T_17 : @[Booth.scala 15:40]
      node _T_20 = cat(UInt<1>("h01"), UInt<17>("h00")) @[Cat.scala 30:58]
      io.out <= _T_20 @[Booth.scala 16:16]
      io.cout <= UInt<1>("h00") @[Booth.scala 17:17]
      skip @[Booth.scala 15:40]
    else : @[Booth.scala 18:47]
      node _T_23 = eq(io.a, UInt<1>("h01")) @[Booth.scala 18:22]
      node _T_25 = eq(io.a, UInt<2>("h02")) @[Booth.scala 18:38]
      node _T_26 = or(_T_23, _T_25) @[Booth.scala 18:30]
      when _T_26 : @[Booth.scala 18:47]
        node _T_29 = cat(UInt<1>("h01"), UInt<1>("h00")) @[Cat.scala 30:58]
        node _T_30 = cat(_T_29, io.b) @[Cat.scala 30:58]
        io.out <= _T_30 @[Booth.scala 19:16]
        io.cout <= UInt<1>("h00") @[Booth.scala 20:17]
        skip @[Booth.scala 18:47]
      else : @[Booth.scala 21:47]
        node _T_33 = eq(io.a, UInt<3>("h05")) @[Booth.scala 21:22]
        node _T_35 = eq(io.a, UInt<3>("h06")) @[Booth.scala 21:38]
        node _T_36 = or(_T_33, _T_35) @[Booth.scala 21:30]
        when _T_36 : @[Booth.scala 21:47]
          node _T_39 = not(io.b) @[Booth.scala 22:43]
          node _T_40 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
          node _T_41 = cat(_T_40, _T_39) @[Cat.scala 30:58]
          io.out <= _T_41 @[Booth.scala 22:16]
          io.cout <= UInt<1>("h01") @[Booth.scala 23:17]
          skip @[Booth.scala 21:47]
        else : @[Booth.scala 24:31]
          node _T_44 = eq(io.a, UInt<2>("h03")) @[Booth.scala 24:22]
          when _T_44 : @[Booth.scala 24:31]
            node _T_47 = cat(UInt<1>("h01"), io.b) @[Cat.scala 30:58]
            node _T_48 = cat(_T_47, UInt<1>("h00")) @[Cat.scala 30:58]
            io.out <= _T_48 @[Booth.scala 25:16]
            io.cout <= UInt<1>("h00") @[Booth.scala 26:17]
            skip @[Booth.scala 24:31]
          else : @[Booth.scala 27:18]
            node _T_51 = not(io.b) @[Booth.scala 28:33]
            node _T_53 = cat(UInt<1>("h00"), _T_51) @[Cat.scala 30:58]
            node _T_54 = cat(_T_53, UInt<1>("h01")) @[Cat.scala 30:58]
            io.out <= _T_54 @[Booth.scala 28:16]
            io.cout <= UInt<1>("h01") @[Booth.scala 29:17]
            skip @[Booth.scala 27:18]
    
  module Booth_7 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<3>, flip b : UInt<16>, out : UInt<18>, cout : UInt<1>}
    
    node _T_14 = eq(io.a, UInt<1>("h00")) @[Booth.scala 15:15]
    node _T_16 = eq(io.a, UInt<3>("h07")) @[Booth.scala 15:31]
    node _T_17 = or(_T_14, _T_16) @[Booth.scala 15:23]
    when _T_17 : @[Booth.scala 15:40]
      node _T_20 = cat(UInt<1>("h01"), UInt<17>("h00")) @[Cat.scala 30:58]
      io.out <= _T_20 @[Booth.scala 16:16]
      io.cout <= UInt<1>("h00") @[Booth.scala 17:17]
      skip @[Booth.scala 15:40]
    else : @[Booth.scala 18:47]
      node _T_23 = eq(io.a, UInt<1>("h01")) @[Booth.scala 18:22]
      node _T_25 = eq(io.a, UInt<2>("h02")) @[Booth.scala 18:38]
      node _T_26 = or(_T_23, _T_25) @[Booth.scala 18:30]
      when _T_26 : @[Booth.scala 18:47]
        node _T_29 = cat(UInt<1>("h01"), UInt<1>("h00")) @[Cat.scala 30:58]
        node _T_30 = cat(_T_29, io.b) @[Cat.scala 30:58]
        io.out <= _T_30 @[Booth.scala 19:16]
        io.cout <= UInt<1>("h00") @[Booth.scala 20:17]
        skip @[Booth.scala 18:47]
      else : @[Booth.scala 21:47]
        node _T_33 = eq(io.a, UInt<3>("h05")) @[Booth.scala 21:22]
        node _T_35 = eq(io.a, UInt<3>("h06")) @[Booth.scala 21:38]
        node _T_36 = or(_T_33, _T_35) @[Booth.scala 21:30]
        when _T_36 : @[Booth.scala 21:47]
          node _T_39 = not(io.b) @[Booth.scala 22:43]
          node _T_40 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
          node _T_41 = cat(_T_40, _T_39) @[Cat.scala 30:58]
          io.out <= _T_41 @[Booth.scala 22:16]
          io.cout <= UInt<1>("h01") @[Booth.scala 23:17]
          skip @[Booth.scala 21:47]
        else : @[Booth.scala 24:31]
          node _T_44 = eq(io.a, UInt<2>("h03")) @[Booth.scala 24:22]
          when _T_44 : @[Booth.scala 24:31]
            node _T_47 = cat(UInt<1>("h01"), io.b) @[Cat.scala 30:58]
            node _T_48 = cat(_T_47, UInt<1>("h00")) @[Cat.scala 30:58]
            io.out <= _T_48 @[Booth.scala 25:16]
            io.cout <= UInt<1>("h00") @[Booth.scala 26:17]
            skip @[Booth.scala 24:31]
          else : @[Booth.scala 27:18]
            node _T_51 = not(io.b) @[Booth.scala 28:33]
            node _T_53 = cat(UInt<1>("h00"), _T_51) @[Cat.scala 30:58]
            node _T_54 = cat(_T_53, UInt<1>("h01")) @[Cat.scala 30:58]
            io.out <= _T_54 @[Booth.scala 28:16]
            io.cout <= UInt<1>("h01") @[Booth.scala 29:17]
            skip @[Booth.scala 27:18]
    
  module Booth_8 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<3>, flip b : UInt<16>, out : UInt<18>, cout : UInt<1>}
    
    node _T_14 = eq(io.a, UInt<1>("h00")) @[Booth.scala 15:15]
    node _T_16 = eq(io.a, UInt<3>("h07")) @[Booth.scala 15:31]
    node _T_17 = or(_T_14, _T_16) @[Booth.scala 15:23]
    when _T_17 : @[Booth.scala 15:40]
      node _T_20 = cat(UInt<1>("h01"), UInt<17>("h00")) @[Cat.scala 30:58]
      io.out <= _T_20 @[Booth.scala 16:16]
      io.cout <= UInt<1>("h00") @[Booth.scala 17:17]
      skip @[Booth.scala 15:40]
    else : @[Booth.scala 18:47]
      node _T_23 = eq(io.a, UInt<1>("h01")) @[Booth.scala 18:22]
      node _T_25 = eq(io.a, UInt<2>("h02")) @[Booth.scala 18:38]
      node _T_26 = or(_T_23, _T_25) @[Booth.scala 18:30]
      when _T_26 : @[Booth.scala 18:47]
        node _T_29 = cat(UInt<1>("h01"), UInt<1>("h00")) @[Cat.scala 30:58]
        node _T_30 = cat(_T_29, io.b) @[Cat.scala 30:58]
        io.out <= _T_30 @[Booth.scala 19:16]
        io.cout <= UInt<1>("h00") @[Booth.scala 20:17]
        skip @[Booth.scala 18:47]
      else : @[Booth.scala 21:47]
        node _T_33 = eq(io.a, UInt<3>("h05")) @[Booth.scala 21:22]
        node _T_35 = eq(io.a, UInt<3>("h06")) @[Booth.scala 21:38]
        node _T_36 = or(_T_33, _T_35) @[Booth.scala 21:30]
        when _T_36 : @[Booth.scala 21:47]
          node _T_39 = not(io.b) @[Booth.scala 22:43]
          node _T_40 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
          node _T_41 = cat(_T_40, _T_39) @[Cat.scala 30:58]
          io.out <= _T_41 @[Booth.scala 22:16]
          io.cout <= UInt<1>("h01") @[Booth.scala 23:17]
          skip @[Booth.scala 21:47]
        else : @[Booth.scala 24:31]
          node _T_44 = eq(io.a, UInt<2>("h03")) @[Booth.scala 24:22]
          when _T_44 : @[Booth.scala 24:31]
            node _T_47 = cat(UInt<1>("h01"), io.b) @[Cat.scala 30:58]
            node _T_48 = cat(_T_47, UInt<1>("h00")) @[Cat.scala 30:58]
            io.out <= _T_48 @[Booth.scala 25:16]
            io.cout <= UInt<1>("h00") @[Booth.scala 26:17]
            skip @[Booth.scala 24:31]
          else : @[Booth.scala 27:18]
            node _T_51 = not(io.b) @[Booth.scala 28:33]
            node _T_53 = cat(UInt<1>("h00"), _T_51) @[Cat.scala 30:58]
            node _T_54 = cat(_T_53, UInt<1>("h01")) @[Cat.scala 30:58]
            io.out <= _T_54 @[Booth.scala 28:16]
            io.cout <= UInt<1>("h01") @[Booth.scala 29:17]
            skip @[Booth.scala 27:18]
    
  module MUL : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, c : UInt<64>}
    
    inst booths_0 of Booth @[MUL.scala 16:27]
    booths_0.clock <= clock
    booths_0.reset <= reset
    node _T_11 = bits(io.a, 1, 0) @[MUL.scala 18:33]
    node _T_13 = cat(_T_11, UInt<1>("h00")) @[Cat.scala 30:58]
    booths_0.io.a <= _T_13 @[MUL.scala 18:22]
    booths_0.io.b <= io.b @[MUL.scala 24:20]
    inst booths_1 of Booth_1 @[MUL.scala 16:27]
    booths_1.clock <= clock
    booths_1.reset <= reset
    node _T_14 = bits(io.a, 3, 1) @[MUL.scala 20:29]
    booths_1.io.a <= _T_14 @[MUL.scala 20:22]
    booths_1.io.b <= io.b @[MUL.scala 24:20]
    inst booths_2 of Booth_2 @[MUL.scala 16:27]
    booths_2.clock <= clock
    booths_2.reset <= reset
    node _T_15 = bits(io.a, 5, 3) @[MUL.scala 20:29]
    booths_2.io.a <= _T_15 @[MUL.scala 20:22]
    booths_2.io.b <= io.b @[MUL.scala 24:20]
    inst booths_3 of Booth_3 @[MUL.scala 16:27]
    booths_3.clock <= clock
    booths_3.reset <= reset
    node _T_16 = bits(io.a, 7, 5) @[MUL.scala 20:29]
    booths_3.io.a <= _T_16 @[MUL.scala 20:22]
    booths_3.io.b <= io.b @[MUL.scala 24:20]
    inst booths_4 of Booth_4 @[MUL.scala 16:27]
    booths_4.clock <= clock
    booths_4.reset <= reset
    node _T_17 = bits(io.a, 9, 7) @[MUL.scala 20:29]
    booths_4.io.a <= _T_17 @[MUL.scala 20:22]
    booths_4.io.b <= io.b @[MUL.scala 24:20]
    inst booths_5 of Booth_5 @[MUL.scala 16:27]
    booths_5.clock <= clock
    booths_5.reset <= reset
    node _T_18 = bits(io.a, 11, 9) @[MUL.scala 20:29]
    booths_5.io.a <= _T_18 @[MUL.scala 20:22]
    booths_5.io.b <= io.b @[MUL.scala 24:20]
    inst booths_6 of Booth_6 @[MUL.scala 16:27]
    booths_6.clock <= clock
    booths_6.reset <= reset
    node _T_19 = bits(io.a, 13, 11) @[MUL.scala 20:29]
    booths_6.io.a <= _T_19 @[MUL.scala 20:22]
    booths_6.io.b <= io.b @[MUL.scala 24:20]
    inst booths_7 of Booth_7 @[MUL.scala 16:27]
    booths_7.clock <= clock
    booths_7.reset <= reset
    node _T_20 = bits(io.a, 15, 13) @[MUL.scala 20:29]
    booths_7.io.a <= _T_20 @[MUL.scala 20:22]
    booths_7.io.b <= io.b @[MUL.scala 24:20]
    inst booths_8 of Booth_8 @[MUL.scala 16:27]
    booths_8.clock <= clock
    booths_8.reset <= reset
    node _T_22 = bits(io.a, 15, 15) @[MUL.scala 22:61]
    node _T_23 = cat(UInt<2>("h00"), _T_22) @[Cat.scala 30:58]
    booths_8.io.a <= _T_23 @[MUL.scala 22:22]
    booths_8.io.b <= io.b @[MUL.scala 24:20]
    node _T_33 = cat(UInt<1>("h00"), booths_0.io.cout) @[Cat.scala 30:58]
    node _T_34 = cat(UInt<1>("h00"), booths_1.io.cout) @[Cat.scala 30:58]
    node _T_35 = cat(_T_34, _T_33) @[Cat.scala 30:58]
    node _T_36 = cat(UInt<1>("h00"), booths_2.io.cout) @[Cat.scala 30:58]
    node _T_37 = cat(UInt<1>("h00"), booths_3.io.cout) @[Cat.scala 30:58]
    node _T_38 = cat(_T_37, _T_36) @[Cat.scala 30:58]
    node _T_39 = cat(_T_38, _T_35) @[Cat.scala 30:58]
    node _T_40 = cat(UInt<1>("h00"), booths_4.io.cout) @[Cat.scala 30:58]
    node _T_41 = cat(UInt<1>("h00"), booths_5.io.cout) @[Cat.scala 30:58]
    node _T_42 = cat(_T_41, _T_40) @[Cat.scala 30:58]
    node _T_43 = cat(UInt<1>("h00"), booths_6.io.cout) @[Cat.scala 30:58]
    node _T_44 = cat(booths_8.io.cout, UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_45 = cat(_T_44, booths_7.io.cout) @[Cat.scala 30:58]
    node _T_46 = cat(_T_45, _T_43) @[Cat.scala 30:58]
    node _T_47 = cat(_T_46, _T_42) @[Cat.scala 30:58]
    node correct_low = cat(_T_47, _T_39) @[Cat.scala 30:58]
    node _T_50 = cat(UInt<1>("h01"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_53 = cat(UInt<1>("h01"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_56 = cat(UInt<1>("h01"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_59 = cat(UInt<1>("h01"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_62 = cat(UInt<1>("h01"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_65 = cat(UInt<1>("h01"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_68 = cat(UInt<1>("h01"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_71 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_72 = cat(_T_68, _T_71) @[Cat.scala 30:58]
    node _T_73 = cat(_T_62, _T_65) @[Cat.scala 30:58]
    node _T_74 = cat(_T_73, _T_72) @[Cat.scala 30:58]
    node _T_75 = cat(_T_56, _T_59) @[Cat.scala 30:58]
    node _T_76 = cat(_T_50, _T_53) @[Cat.scala 30:58]
    node _T_77 = cat(_T_76, _T_75) @[Cat.scala 30:58]
    node correct_hgh = cat(_T_77, _T_74) @[Cat.scala 30:58]
    node correct = cat(correct_hgh, correct_low) @[Cat.scala 30:58]
    node _T_78 = shl(UInt<32>("h00"), 2) @[MUL.scala 35:20]
    node _T_79 = add(_T_78, booths_8.io.out) @[MUL.scala 35:26]
    node _T_80 = tail(_T_79, 1) @[MUL.scala 35:26]
    node _T_81 = shl(_T_80, 2) @[MUL.scala 35:20]
    node _T_82 = add(_T_81, booths_7.io.out) @[MUL.scala 35:26]
    node _T_83 = tail(_T_82, 1) @[MUL.scala 35:26]
    node _T_84 = shl(_T_83, 2) @[MUL.scala 35:20]
    node _T_85 = add(_T_84, booths_6.io.out) @[MUL.scala 35:26]
    node _T_86 = tail(_T_85, 1) @[MUL.scala 35:26]
    node _T_87 = shl(_T_86, 2) @[MUL.scala 35:20]
    node _T_88 = add(_T_87, booths_5.io.out) @[MUL.scala 35:26]
    node _T_89 = tail(_T_88, 1) @[MUL.scala 35:26]
    node _T_90 = shl(_T_89, 2) @[MUL.scala 35:20]
    node _T_91 = add(_T_90, booths_4.io.out) @[MUL.scala 35:26]
    node _T_92 = tail(_T_91, 1) @[MUL.scala 35:26]
    node _T_93 = shl(_T_92, 2) @[MUL.scala 35:20]
    node _T_94 = add(_T_93, booths_3.io.out) @[MUL.scala 35:26]
    node _T_95 = tail(_T_94, 1) @[MUL.scala 35:26]
    node _T_96 = shl(_T_95, 2) @[MUL.scala 35:20]
    node _T_97 = add(_T_96, booths_2.io.out) @[MUL.scala 35:26]
    node _T_98 = tail(_T_97, 1) @[MUL.scala 35:26]
    node _T_99 = shl(_T_98, 2) @[MUL.scala 35:20]
    node _T_100 = add(_T_99, booths_1.io.out) @[MUL.scala 35:26]
    node _T_101 = tail(_T_100, 1) @[MUL.scala 35:26]
    node _T_102 = shl(_T_101, 2) @[MUL.scala 35:20]
    node _T_103 = add(_T_102, booths_0.io.out) @[MUL.scala 35:26]
    node _T_104 = tail(_T_103, 1) @[MUL.scala 35:26]
    node _T_105 = add(_T_104, correct) @[MUL.scala 38:15]
    node acc = tail(_T_105, 1) @[MUL.scala 38:15]
    node _T_106 = bits(acc, 31, 0) @[MUL.scala 40:16]
    io.c <= _T_106 @[MUL.scala 40:10]
    
